name: ci
on:
  push: 
    branches: ["main"]
  pull_request: 
    branches: ["main", "release/**"]
env:
  GO_VERSION: '1.16'
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - uses: ./.github/actions/goenv
      with:
        go-version: ${{ env.GO_VERSION }}
    - name: golangci-lint
      uses: golangci/golangci-lint-action@v2
      with:
        # Optional: version of golangci-lint to use in form of v1.2 or v1.2.3 or `latest` to use the latest version
        version: v1.29
        args: -v --concurrency 2 --timeout 10m
        # Optional: show only new issues if it's a pull request. The default value is `false`.
        only-new-issues: true
        # Optional: if set to true then the action will use pre-installed Go.
        skip-go-installation: true

  test:
    name: test (consul-version=${{ matrix.consul-version }})
    strategy:
      matrix:
        consul-version: [1.11.x, 1.11.x+ent]
    runs-on: ubuntu-latest
    env:
      TEST_RESULTS_DIR: /tmp/test-results/consul@${{ matrix.consul-version }}
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - uses: ./.github/actions/goenv
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Install Consul
      uses: nickethier/action-setup-hashicorp-tool@main #TODO: update action when migrated to hc org
      with:
        product: consul
        version: ${{ matrix.consul-version }}

    - name: Test
      run: |
        mkdir -p $TEST_RESULTS_DIR/json
        PACKAGE_NAMES=$(go list ./... | grep -v 'mocks' | grep -v 'testing' | tr '\n' ' ')
        echo "Testing $(echo $PACKAGE_NAMES | wc -w) packages"
        echo $PACKAGE_NAMES
        gotestsum \
          --format=short-verbose \
          --jsonfile $TEST_RESULTS_DIR/json/go-test-race.log \
          --junitfile $TEST_RESULTS_DIR/gotestsum-report.xml -- \
          -race $PACKAGE_NAMES

    - uses: actions/upload-artifact@v2
      with:
        name: test-results
        path: ${{ env.TEST_RESULTS_DIR }}
